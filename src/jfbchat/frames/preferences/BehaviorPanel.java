/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BehaviorPanel.java
 *
 * Created on 11 mars 2011, 17:08:53
 */

package jfbchat.frames.preferences;

import jfbchat.resources.Options;
import jfbchat.resources.ChatPreferences;

import javax.swing.JCheckBox;

/**
 *
 * @author peppe
 */
public class BehaviorPanel extends javax.swing.JPanel {

  private ChatPreferences prefs;

  /** Creates new form BehaviorPanel */
  public BehaviorPanel() {
  initComponents();

  prefs = new  ChatPreferences();
  //Init the options
  this.CheckDownloadAvatar.setSelected(prefs.getPreferences().getBoolean(Options.DownloadImgs, true));
  this.checkSaveAvaToCache.setSelected(prefs.getPreferences().getBoolean(Options.SAVE_AVATARS_TO_CACHE, true));
  this.jCheckBoxSendIsTyping.setSelected(prefs.getPreferences().getBoolean(Options.SEND_TYPING_MESSAGE , true));

  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

  jPanel1 = new javax.swing.JPanel();
  CheckDownloadAvatar = new javax.swing.JCheckBox();
  checkSaveAvaToCache = new javax.swing.JCheckBox();
  jPanelChat = new javax.swing.JPanel();
  jCheckBoxSendIsTyping = new javax.swing.JCheckBox();

  setMinimumSize(new java.awt.Dimension(432, 107));

  jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Avatars"));

  CheckDownloadAvatar.setText("Download avatars  (Restart needed)");
  CheckDownloadAvatar.setToolTipText("Download avatar images at the login");
  CheckDownloadAvatar.addItemListener(new java.awt.event.ItemListener() {
    public void itemStateChanged(java.awt.event.ItemEvent evt) {
    CheckDownloadAvatarItemStateChanged(evt);
    }
  });

  checkSaveAvaToCache.setText("Save avatars to a local directory (Restart needed) ");
  checkSaveAvaToCache.setToolTipText("Save images to a local directory for better performances");
  checkSaveAvaToCache.addItemListener(new java.awt.event.ItemListener() {
    public void itemStateChanged(java.awt.event.ItemEvent evt) {
    checkSaveAvaToCacheItemStateChanged(evt);
    }
  });

  javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
  jPanel1.setLayout(jPanel1Layout);
  jPanel1Layout.setHorizontalGroup(
    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(jPanel1Layout.createSequentialGroup()
    .addContainerGap()
    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(CheckDownloadAvatar)
      .addComponent(checkSaveAvaToCache))
    .addContainerGap(19, Short.MAX_VALUE))
);
  jPanel1Layout.setVerticalGroup(
    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(jPanel1Layout.createSequentialGroup()
    .addComponent(CheckDownloadAvatar)
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
    .addComponent(checkSaveAvaToCache)
    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
);

  jPanelChat.setBorder(javax.swing.BorderFactory.createTitledBorder("Chat"));

  jCheckBoxSendIsTyping.setText("Send \"Is typing\" notification");
  jCheckBoxSendIsTyping.addItemListener(new java.awt.event.ItemListener() {
    public void itemStateChanged(java.awt.event.ItemEvent evt) {
    jCheckBoxSendIsTypingItemStateChanged(evt);
    }
  });

  javax.swing.GroupLayout jPanelChatLayout = new javax.swing.GroupLayout(jPanelChat);
  jPanelChat.setLayout(jPanelChatLayout);
  jPanelChatLayout.setHorizontalGroup(
    jPanelChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(jPanelChatLayout.createSequentialGroup()
    .addContainerGap()
    .addComponent(jCheckBoxSendIsTyping)
    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
);
  jPanelChatLayout.setVerticalGroup(
    jPanelChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addComponent(jCheckBoxSendIsTyping)
);

  javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
  this.setLayout(layout);
  layout.setHorizontalGroup(
    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(layout.createSequentialGroup()
    .addContainerGap()
    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanelChat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    .addContainerGap())
);
  layout.setVerticalGroup(
    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(layout.createSequentialGroup()
    .addComponent(jPanelChat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    .addContainerGap())
);
  }// </editor-fold>//GEN-END:initComponents

  private void CheckDownloadAvatarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CheckDownloadAvatarItemStateChanged

  //Get the item
  JCheckBox item = (JCheckBox) evt.getItem();

  //Change the value in the preferences with the value of the checkbox
  prefs.getPreferences().putBoolean(Options.DownloadImgs, item.isSelected());

  }//GEN-LAST:event_CheckDownloadAvatarItemStateChanged

  private void checkSaveAvaToCacheItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkSaveAvaToCacheItemStateChanged
  //Get the item
  JCheckBox item = (JCheckBox) evt.getItem();

  //Change the value in the preferences with the value of the checkbox
  prefs.getPreferences().putBoolean(Options.SAVE_AVATARS_TO_CACHE, item.isSelected());
  }//GEN-LAST:event_checkSaveAvaToCacheItemStateChanged

  private void jCheckBoxSendIsTypingItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxSendIsTypingItemStateChanged
  //Get the item
  JCheckBox item = (JCheckBox) evt.getItem();

  //Change the value in the preferences with the value of the checkbox
  prefs.getPreferences().putBoolean(Options.SEND_TYPING_MESSAGE, item.isSelected());

  }//GEN-LAST:event_jCheckBoxSendIsTypingItemStateChanged

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JCheckBox CheckDownloadAvatar;
  private javax.swing.JCheckBox checkSaveAvaToCache;
  private javax.swing.JCheckBox jCheckBoxSendIsTyping;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanelChat;
  // End of variables declaration//GEN-END:variables

}
